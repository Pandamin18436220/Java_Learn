package GOF23.Interpreter;

/**
 * 解释器模式
 *   - 一种不常用的设计模式
 *   - 用于描述如何构成一个简单的语言解释器，主要用于使用面向对象语言开发的编译器
 *     和解释权设计
 *   - 当我们需要开发一种新的语言时，可以考虑到使用解释器
 *   - 尽量不要使用解释器模式，后期维护有很大麻烦
 *      可以使用Jruby，Groovy,java的js引擎代替解释器，弥补java语言的不足
 *     ”1+2*3“
 *
 *  场景：
 *    - EL表达式的处理
 *    - 正则表达式的解释器
 *    - SQL语法的解释器
 *    - 数学表达式解释器
 *
 */
public class Interpreter {
}
